!function(n){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.topojson=n()}}(function(){var n;return function n(e,t,r){function o(i,c){if(!t[i]){if(!e[i]){var u="function"==typeof require&&require;if(!c&&u)return u(i,!0);if(a)return a(i,!0);var f=new Error("Cannot find module '"+i+"'");throw f.code="MODULE_NOT_FOUND",f}var s=t[i]={exports:{}};e[i][0].call(s.exports,function(n){var t=e[i][1][n];return o(t?t:n)},s,s.exports,n,e,t,r)}return t[i].exports}for(var a="function"==typeof require&&require,i=0;i<r.length;i++)o(r[i]);return o}({"topojson-client":[function(e,t,r){!function(e,o){"object"==typeof r&&"undefined"!=typeof t?o(r):"function"==typeof n&&n.amd?n(["exports"],o):o(e.topojson=e.topojson||{})}(this,function(n){"use strict";function e(n,e){var r=e.id,o=e.bbox,a=null==e.properties?{}:e.properties,i=t(n,e);return null==r&&null==o?{type:"Feature",properties:a,geometry:i}:null==o?{type:"Feature",id:r,properties:a,geometry:i}:{type:"Feature",id:r,bbox:o,properties:a,geometry:i}}function t(n,e){function t(n,e){e.length&&e.pop();for(var t=l[n<0?~n:n],r=0,o=t.length;r<o;++r)e.push(f(t[r].slice(),r));n<0&&s(e,o)}function r(n){return f(n.slice())}function o(n){for(var e=[],r=0,o=n.length;r<o;++r)t(n[r],e);return e.length<2&&e.push(e[0].slice()),e}function a(n){for(var e=o(n);e.length<4;)e.push(e[0].slice());return e}function i(n){return n.map(a)}function c(n){var e,t=n.type;switch(t){case"GeometryCollection":return{type:t,geometries:n.geometries.map(c)};case"Point":e=r(n.coordinates);break;case"MultiPoint":e=n.coordinates.map(r);break;case"LineString":e=o(n.arcs);break;case"MultiLineString":e=n.arcs.map(o);break;case"Polygon":e=i(n.arcs);break;case"MultiPolygon":e=n.arcs.map(i);break;default:return null}return{type:t,coordinates:e}}var f=u(n),l=n.arcs;return c(e)}function r(n,e,t){var r,a,i;if(arguments.length>1)r=o(n,e,t);else for(a=0,r=new Array(i=n.arcs.length);a<i;++a)r[a]=a;return{type:"MultiLineString",arcs:h(n,r)}}function o(n,e,t){function r(n){var e=n<0?~n:n;(s[e]||(s[e]=[])).push({i:n,g:u})}function o(n){n.forEach(r)}function a(n){n.forEach(o)}function i(n){n.forEach(a)}function c(n){switch(u=n,n.type){case"GeometryCollection":n.geometries.forEach(c);break;case"LineString":o(n.arcs);break;case"MultiLineString":case"Polygon":a(n.arcs);break;case"MultiPolygon":i(n.arcs)}}var u,f=[],s=[];return c(e),s.forEach(null==t?function(n){f.push(n[0].i)}:function(n){t(n[0].g,n[n.length-1].g)&&f.push(n[0].i)}),f}function a(n){for(var e,t=-1,r=n.length,o=n[r-1],a=0;++t<r;)e=o,o=n[t],a+=e[0]*o[1]-e[1]*o[0];return Math.abs(a)}function i(n,e){function r(n){switch(n.type){case"GeometryCollection":n.geometries.forEach(r);break;case"Polygon":o(n.arcs);break;case"MultiPolygon":n.arcs.forEach(o)}}function o(n){n.forEach(function(e){e.forEach(function(e){(c[e=e<0?~e:e]||(c[e]=[])).push(n)})}),u.push(n)}function i(e){return a(t(n,{type:"Polygon",arcs:[e]}).coordinates[0])}var c={},u=[],f=[];return e.forEach(r),u.forEach(function(n){if(!n._){var e=[],t=[n];for(n._=1,f.push(e);n=t.pop();)e.push(n),n.forEach(function(n){n.forEach(function(n){c[n<0?~n:n].forEach(function(n){n._||(n._=1,t.push(n))})})})}}),u.forEach(function(n){delete n._}),{type:"MultiPolygon",arcs:f.map(function(e){var t,r=[];if(e.forEach(function(n){n.forEach(function(n){n.forEach(function(n){c[n<0?~n:n].length<2&&r.push(n)})})}),r=h(n,r),(t=r.length)>1)for(var o,a,u=1,f=i(r[0]);u<t;++u)(o=i(r[u]))>f&&(a=r[0],r[0]=r[u],r[u]=a,f=o);return r})}}var c=function(n){return n},u=function(n){if(null==(e=n.transform))return c;var e,t,r,o=e.scale[0],a=e.scale[1],i=e.translate[0],u=e.translate[1];return function(n,e){return e||(t=r=0),n[0]=(t+=n[0])*o+i,n[1]=(r+=n[1])*a+u,n}},f=function(n){function e(n){c[0]=n[0],c[1]=n[1],i(c),c[0]<f&&(f=c[0]),c[0]>l&&(l=c[0]),c[1]<s&&(s=c[1]),c[1]>h&&(h=c[1])}function t(n){switch(n.type){case"GeometryCollection":n.geometries.forEach(t);break;case"Point":e(n.coordinates);break;case"MultiPoint":n.coordinates.forEach(e)}}var r=n.bbox;if(!r){var o,a,i=u(n),c=new Array(2),f=1/0,s=f,l=-f,h=-f;n.arcs.forEach(function(n){for(var e=-1,t=n.length;++e<t;)o=n[e],c[0]=o[0],c[1]=o[1],i(c,e),c[0]<f&&(f=c[0]),c[0]>l&&(l=c[0]),c[1]<s&&(s=c[1]),c[1]>h&&(h=c[1])});for(a in n.objects)t(n.objects[a]);r=n.bbox=[f,s,l,h]}return r},s=function(n,e){for(var t,r=n.length,o=r-e;o<--r;)t=n[o],n[o++]=n[r],n[r]=t},l=function(n,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return e(n,t)})}:e(n,t)},h=function(n,e){function t(e){var t,r=n.arcs[e<0?~e:e],o=r[0];return n.transform?(t=[0,0],r.forEach(function(n){t[0]+=n[0],t[1]+=n[1]})):t=r[r.length-1],e<0?[t,o]:[o,t]}function r(n,e){for(var t in n){var r=n[t];delete e[r.start],delete r.start,delete r.end,r.forEach(function(n){o[n<0?~n:n]=1}),c.push(r)}}var o={},a={},i={},c=[],u=-1;return e.forEach(function(t,r){var o,a=n.arcs[t<0?~t:t];a.length<3&&!a[1][0]&&!a[1][1]&&(o=e[++u],e[u]=t,e[r]=o)}),e.forEach(function(n){var e,r,o=t(n),c=o[0],u=o[1];if(e=i[c])if(delete i[e.end],e.push(n),e.end=u,r=a[u]){delete a[r.start];var f=r===e?e:e.concat(r);a[f.start=e.start]=i[f.end=r.end]=f}else a[e.start]=i[e.end]=e;else if(e=a[u])if(delete a[e.start],e.unshift(n),e.start=c,r=i[c]){delete i[r.end];var s=r===e?e:r.concat(e);a[s.start=r.start]=i[s.end=e.end]=s}else a[e.start]=i[e.end]=e;else e=[n],a[e.start=c]=i[e.end=u]=e}),r(i,a),r(a,i),e.forEach(function(n){o[n<0?~n:n]||c.push([n])}),c},p=function(n){return t(n,r.apply(this,arguments))},d=function(n){return t(n,i.apply(this,arguments))},g=function(n,e){for(var t=0,r=n.length;t<r;){var o=t+r>>>1;n[o]<e?t=o+1:r=o}return t},y=function(n){function e(n,e){n.forEach(function(n){n<0&&(n=~n);var t=o[n];t?t.push(e):o[n]=[e]})}function t(n,t){n.forEach(function(n){e(n,t)})}function r(n,e){"GeometryCollection"===n.type?n.geometries.forEach(function(n){r(n,e)}):n.type in i&&i[n.type](n.arcs,e)}var o={},a=n.map(function(){return[]}),i={LineString:e,MultiLineString:t,Polygon:t,MultiPolygon:function(n,e){n.forEach(function(n){t(n,e)})}};n.forEach(r);for(var c in o)for(var u=o[c],f=u.length,s=0;s<f;++s)for(var l=s+1;l<f;++l){var h,p=u[s],d=u[l];(h=a[p])[c=g(h,d)]!==d&&h.splice(c,0,d),(h=a[d])[c=g(h,p)]!==p&&h.splice(c,0,p)}return a},v=function(n,e){function t(n){n[0]=Math.round((n[0]-i)/c),n[1]=Math.round((n[1]-u)/s)}function r(n){switch(n.type){case"GeometryCollection":n.geometries.forEach(r);break;case"Point":t(n.coordinates);break;case"MultiPoint":n.coordinates.forEach(t)}}if(!((e=Math.floor(e))>=2))throw new Error("n must be â‰¥2");if(n.transform)throw new Error("already quantized");var o,a=f(n),i=a[0],c=(a[2]-i)/(e-1)||1,u=a[1],s=(a[3]-u)/(e-1)||1;n.arcs.forEach(function(n){for(var e,t,r,o=1,a=1,f=n.length,l=n[0],h=l[0]=Math.round((l[0]-i)/c),p=l[1]=Math.round((l[1]-u)/s);o<f;++o)l=n[o],t=Math.round((l[0]-i)/c),r=Math.round((l[1]-u)/s),t===h&&r===p||(e=n[a++],e[0]=t-h,h=t,e[1]=r-p,p=r);a<2&&(e=n[a++],e[0]=0,e[1]=0),n.length=a});for(o in n.objects)r(n.objects[o]);return n.transform={scale:[c,s],translate:[i,u]},n},m=function(n){if(null==(e=n.transform))return c;var e,t,r,o=e.scale[0],a=e.scale[1],i=e.translate[0],u=e.translate[1];return function(n,e){e||(t=r=0);var c=Math.round((n[0]-i)/o),f=Math.round((n[1]-u)/a);return n[0]=c-t,t=c,n[1]=f-r,r=f,n}};n.bbox=f,n.feature=l,n.mesh=p,n.meshArcs=r,n.merge=d,n.mergeArcs=i,n.neighbors=y,n.quantize=v,n.transform=u,n.untransform=m,Object.defineProperty(n,"__esModule",{value:!0})})},{}]},{},[])("topojson-client")});

var topojson = module.exports;
